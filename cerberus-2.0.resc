:name: Cerberus 2.0 Emulation
:description: This runs the cerberus 2.0 firmware in a emulation.

mach create "cerberus"

logLevel 1

emulation CreateCANHub "canHub"

include $CWD/Drivers/Embedded-Base/dev/renode/can/SocketCANBridgeNER.cs
include $CWD/Drivers/Embedded-Base/dev/renode/can/STMCAN_NER.cs
# include $CWD/Drivers/Embedded-Base/dev/renode/peripherals/PCA9539.cs
# include $CWD/Drivers/Embedded-Base/dev/renode/peripherals/STM32DMANER.cs
# include $CWD/Drivers/Embedded-Base/dev/renode/peripherals/STM32ADCNER.cs
# include $CWD/Drivers/Embedded-Base/dev/renode/peripherals/LSM6DSO_IMU_NER.cs
# include $CWD/Drivers/Embedded-Base/dev/renode/peripherals/LSM6DSO_IMU_I2C.cs
# include $CWD/Drivers/Embedded-Base/dev/renode/peripherals/INA226.cs
include $CWD/Drivers/Embedded-Base/dev/renode/i2c/STM32F4_I2C_NER.cs

machine LoadPlatformDescription $CWD/vcu.repl

sysbus LoadELF $CWD/build/cerberus.elf

machine CreateSocketCANBridgeNER "socketcan" "vcan0" 

machine StartGdbServer 3334 true

connector Connect sysbus.can1 canHub

connector Connect sysbus.socketcan canHub 

showAnalyzer sysbus.usart3

# sysbus.pedalsAdc FeedSample 650 0 -1
# sysbus.pedalsAdc FeedSample 650 1 -1
# sysbus.pedalsAdc FeedSample 1050 3 -1 # 1.5V ACCEL 2
# sysbus.pedalsAdc FeedSample 1802 2 -1 # 0.5V ACCEL 1

# sysbus.lvAdc FeedSample 0xFF 10 -1

# sysbus.pumpsTempAdc FeedSample 0xFF 11 -1
# sysbus.pumpsTempAdc FeedSample 0xFF 12 -1

# start

# sysbus.gpioPortB.button0 PressAndRelease 
# To connect to GDB server run gdb-multiarch ./build/*.elf -ex "target remote localhost:3333"
# To see the can messages emitted run `candump vcan0` on host in a separate terminal
# To initialize the vcan run `sudo modprobe vcan` and then `sudo ip link add dev vcan0 type vcan` and `sudo ip link set up vcan0`
# sudo docker run --rm --network=host -it -v $(pwd):/mnt -w /mnt antmicro/renode renode -e "include @/mnt/wheel.resc"
# Changes you may have to make: Add the clear bit into stm32f4xx_hal_can.c around line 331   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
# Delete OS Delays in pdu init and others that occur before the task scheduler has been started

